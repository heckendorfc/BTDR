% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/frag_cov.R
\name{fragment.coverage}
\alias{fragment.coverage}
\alias{fragment.coverage.generic}
\title{Plot fragment coverage}
\usage{
fragment.coverage(data, file = "cov.svg", columns = 25L, scale = 2,
  color = c("#00f", "#f00", "#000"), marksite = NULL)

fragment.coverage.generic(data, sequence, file = "cov.svg", columns = 25L,
  scale = 2, color = c("#00f", "#f00", "#000"), marksite = NULL)
}
\arguments{
\item{data}{a bupid object; output from read.bupid}

\item{file}{the output file name}

\item{columns}{the number of columns (residues per line) to use for the sequence}

\item{scale}{magnification factor for the image}

\item{color}{a length 3 character vector indicating the color C-term, N-term, and other
fragments should be colored respectively. Also valid are NULL to make them
all black or a length 1 character vector to make them all that color.}

\item{marksite}{site numbers to place a marker at}

\item{sequence}{protein sequence used in assignments}
}
\value{
Returns the name of the file created.
}
\description{
These functions generate a map of fragmentation sites within a given
protein sequence.

fragment.coverage plots fragment coverage based on BUPID results.

The fragment coverage image can also be called using a generic
non-bupid format. Data in the generic function takes the form
data.frame(term=c("C","N"),num=c(1,50)), where term is the protein
terminus the fragment is generated from, and num is the fragment
number or length in amino acids.
}
\examples{
\dontrun{
#bupid version
server <- "http://bupid.bumc.bu.edu/cgi-bin/get_results.cgi"
infile <- "key=WBNqTswT5DPg3aDO&ID=320&date=20150309"
data <- read.bupid(url=paste(server,infile,sep="?"))
fragment.coverage(data,file="136_coverage.svg",columns=50)

#generic version
data <- data.frame(term=c("N","N","C","C"),num=c(1,2,1,2))
fragment.coverage.generic(data,"ACDEF",file="generic_coverage.svg",scale=3,color=F)
}

}

