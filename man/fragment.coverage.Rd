% Generated by roxygen2 (4.1.0): do not edit by hand
% Please edit documentation in R/frag_cov.R
\name{fragment.coverage}
\alias{fragment.coverage}
\alias{fragment.coverage.generic}
\title{Plot fragment coverage}
\usage{
fragment.coverage(data, file = "cov.svg", columns = 25L, scale = 2,
  fitid = 1L, color = T)

fragment.coverage.generic(data, sequence, file = "cov.svg", columns = 25L,
  scale = 2, color = T)
}
\arguments{
\item{data}{output from read.bupid}

\item{file}{the output file name}

\item{columns}{the number of columns (residues per line) to use for the sequence}

\item{scale}{magnification factor for the image}

\item{fitid}{peak fit result index to process}

\item{color}{boolean value with true indicating the fragments should be coloured red/blue
and false making them all black.}

\item{sequence}{protein sequence used in assignments}
}
\value{
Returns the name of the file created.
}
\description{
These functions generate a map of fragmentation sites within a given
protein sequence.

fragment.coverage plots fragment coverage based on BUPID results.

The fragment coverage image can also be called using a generic
non-bupid format. Data in the generic function takes the form
data.frame(term=c("C","N"),num=c(1,50)), where term is the protein
terminus the fragment is generated from, and num is the fragment
number or length in amino acids.
}
\examples{
#bupid version
server <- "http://bumc-florida.bumc.bu.edu/BUPID_TD/cgi-bin/get_results.cgi"
infile <- "key=a1edb86d8f2d4cfcfd065755c5c725f8&ID=136&date=20140801"
data <- read.bupid(url=paste(server,infile,sep="?"))
fragment.coverage(data,file="136_coverage.svg",columns=50)

#generic version
data <- data.frame(term=c("N","N","C","C"),num=c(1,2,1,2))
fragment.coverage.generic(data,"ACDEF",file="generic_coverage.svg",scale=3,color=F)
}

